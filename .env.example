# You must first activate a Billing Account here: https://platform.openai.com/account/billing/overview
# Then get your OpenAI API Key here: https://platform.openai.com/account/api-keys
OPENAI_API_KEY=XXXXXXXX

# OpenAI Model Configuration
# If you want to specify a particular OpenAI model, please set the OPENAI_MODEL variable to the model's name or ID.
# By default, the script will use the GPT-3.5 Turbo model.
# OPENAI_MODEL=XXXXXXXX

# OpenAI System Message
# If you want to specify a custom system message for your AI chatbot, you can set the OPENAI_SYSTEM_MESSAGE variable to the desired message content.
# This message will be displayed as the system's initial introduction.
# If not specified, a default system message will be used.
# OPENAI_SYSTEM_MESSAGE=XXXXXXXX

# Enable Single Sign-On (SSO) authentication
AUTH_SSO_ENABLED=true

# Email pattern matching to restrict access to a specific email domain (e.g. @gmail.com)
# AUTH_EMAIL_PATTERN=XXXXXXXX

# Generate a random secret: https://generate-secret.vercel.app/32 or `openssl rand -base64 32`
AUTH_SECRET=XXXXXXXX

# Create a GitHub OAuth app here: https://github.com/settings/applications/new
# Authorization callback URL: https://authjs.dev/reference/core/providers_github#callback-url
# Enable or disable GitHub login. Set to "true" to enable, "false" to disable.
AUTH_GITHUB_ENABLED=true
AUTH_GITHUB_ID=XXXXXXXX
AUTH_GITHUB_SECRET=XXXXXXXX

# Create a Google OAuth app here: https://console.developers.google.com/
# Authorization callback URL: https://authjs.dev/reference/core/providers_google#callback-url
# Enable or disable Google login. Set to "true" to enable, "false" to disable.
AUTH_GOOGLE_ENABLED=true
AUTH_GOOGLE_ID=XXXXXXXX
AUTH_GOOGLE_SECRET=XXXXXXXX

# Support OAuth login on preview deployments, see: https://authjs.dev/guides/basics/deployment#securing-a-preview-deployment
# Set the following only when deployed. In this example, we can reuse the same OAuth app, but if you are storing users, we recommend using a different OAuth app for development/production so that you don't mix your test and production user base.
# AUTH_REDIRECT_PROXY_URL=https://YOURAPP.vercel.app/api/auth

# Set the MONGODB_URI to your MongoDB Atlas connection string.
# Instructions to set up MongoDB connection here: https://www.mongodb.com/docs/guides/atlas/connection-string/
MONGODB_URI=XXXXXXXX

# MongoDB database name
# If MONGODB_DB is left undefined, the script will use the database name from the connection string.
# MONGODB_DB=XXXXXXXX